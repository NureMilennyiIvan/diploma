/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getQ64128Decoder,
  getQ64128Encoder,
  type Q64128,
  type Q64128Args,
} from '.';

export type CollectProtocolRewardEvent = {
  launchpool: Address;
  signer: Address;
  rewardAuthority: Address;
  rewardAuthorityAccount: Address;
  protocolRewardToRedeem: bigint;
  rewardPerToken: Q64128;
  claimTimestamp: bigint;
};

export type CollectProtocolRewardEventArgs = {
  launchpool: Address;
  signer: Address;
  rewardAuthority: Address;
  rewardAuthorityAccount: Address;
  protocolRewardToRedeem: number | bigint;
  rewardPerToken: Q64128Args;
  claimTimestamp: number | bigint;
};

export function getCollectProtocolRewardEventEncoder(): Encoder<CollectProtocolRewardEventArgs> {
  return getStructEncoder([
    ['launchpool', getAddressEncoder()],
    ['signer', getAddressEncoder()],
    ['rewardAuthority', getAddressEncoder()],
    ['rewardAuthorityAccount', getAddressEncoder()],
    ['protocolRewardToRedeem', getU64Encoder()],
    ['rewardPerToken', getQ64128Encoder()],
    ['claimTimestamp', getU64Encoder()],
  ]);
}

export function getCollectProtocolRewardEventDecoder(): Decoder<CollectProtocolRewardEvent> {
  return getStructDecoder([
    ['launchpool', getAddressDecoder()],
    ['signer', getAddressDecoder()],
    ['rewardAuthority', getAddressDecoder()],
    ['rewardAuthorityAccount', getAddressDecoder()],
    ['protocolRewardToRedeem', getU64Decoder()],
    ['rewardPerToken', getQ64128Decoder()],
    ['claimTimestamp', getU64Decoder()],
  ]);
}

export function getCollectProtocolRewardEventCodec(): Codec<
  CollectProtocolRewardEventArgs,
  CollectProtocolRewardEvent
> {
  return combineCodec(
    getCollectProtocolRewardEventEncoder(),
    getCollectProtocolRewardEventDecoder()
  );
}
