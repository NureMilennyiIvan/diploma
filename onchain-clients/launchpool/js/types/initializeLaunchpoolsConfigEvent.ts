/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type InitializeLaunchpoolsConfigEvent = {
  authority: Address;
  launchpoolsConfig: Address;
  rewardAuthority: Address;
  stakableMint: Address;
  minPositionSize: bigint;
  maxPositionSize: bigint;
  protocolRewardShareBasisPoints: number;
  duration: bigint;
  id: bigint;
  timestamp: bigint;
};

export type InitializeLaunchpoolsConfigEventArgs = {
  authority: Address;
  launchpoolsConfig: Address;
  rewardAuthority: Address;
  stakableMint: Address;
  minPositionSize: number | bigint;
  maxPositionSize: number | bigint;
  protocolRewardShareBasisPoints: number;
  duration: number | bigint;
  id: number | bigint;
  timestamp: number | bigint;
};

export function getInitializeLaunchpoolsConfigEventEncoder(): Encoder<InitializeLaunchpoolsConfigEventArgs> {
  return getStructEncoder([
    ['authority', getAddressEncoder()],
    ['launchpoolsConfig', getAddressEncoder()],
    ['rewardAuthority', getAddressEncoder()],
    ['stakableMint', getAddressEncoder()],
    ['minPositionSize', getU64Encoder()],
    ['maxPositionSize', getU64Encoder()],
    ['protocolRewardShareBasisPoints', getU16Encoder()],
    ['duration', getU64Encoder()],
    ['id', getU64Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getInitializeLaunchpoolsConfigEventDecoder(): Decoder<InitializeLaunchpoolsConfigEvent> {
  return getStructDecoder([
    ['authority', getAddressDecoder()],
    ['launchpoolsConfig', getAddressDecoder()],
    ['rewardAuthority', getAddressDecoder()],
    ['stakableMint', getAddressDecoder()],
    ['minPositionSize', getU64Decoder()],
    ['maxPositionSize', getU64Decoder()],
    ['protocolRewardShareBasisPoints', getU16Decoder()],
    ['duration', getU64Decoder()],
    ['id', getU64Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getInitializeLaunchpoolsConfigEventCodec(): Codec<
  InitializeLaunchpoolsConfigEventArgs,
  InitializeLaunchpoolsConfigEvent
> {
  return combineCodec(
    getInitializeLaunchpoolsConfigEventEncoder(),
    getInitializeLaunchpoolsConfigEventDecoder()
  );
}
