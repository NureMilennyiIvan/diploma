/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getQ64128Decoder,
  getQ64128Encoder,
  type Q64128,
  type Q64128Args,
} from '.';

export type LaunchLaunchpoolEvent = {
  authority: Address;
  launchpool: Address;
  rewardRate: Q64128;
  startTimestamp: bigint;
  endTimestamp: bigint;
  lastUpdateTimestamp: bigint;
  timestamp: bigint;
};

export type LaunchLaunchpoolEventArgs = {
  authority: Address;
  launchpool: Address;
  rewardRate: Q64128Args;
  startTimestamp: number | bigint;
  endTimestamp: number | bigint;
  lastUpdateTimestamp: number | bigint;
  timestamp: number | bigint;
};

export function getLaunchLaunchpoolEventEncoder(): Encoder<LaunchLaunchpoolEventArgs> {
  return getStructEncoder([
    ['authority', getAddressEncoder()],
    ['launchpool', getAddressEncoder()],
    ['rewardRate', getQ64128Encoder()],
    ['startTimestamp', getU64Encoder()],
    ['endTimestamp', getU64Encoder()],
    ['lastUpdateTimestamp', getU64Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getLaunchLaunchpoolEventDecoder(): Decoder<LaunchLaunchpoolEvent> {
  return getStructDecoder([
    ['authority', getAddressDecoder()],
    ['launchpool', getAddressDecoder()],
    ['rewardRate', getQ64128Decoder()],
    ['startTimestamp', getU64Decoder()],
    ['endTimestamp', getU64Decoder()],
    ['lastUpdateTimestamp', getU64Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getLaunchLaunchpoolEventCodec(): Codec<
  LaunchLaunchpoolEventArgs,
  LaunchLaunchpoolEvent
> {
  return combineCodec(
    getLaunchLaunchpoolEventEncoder(),
    getLaunchLaunchpoolEventDecoder()
  );
}
